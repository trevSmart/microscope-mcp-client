#!/bin/bash

# Script per publicar el paquet ibm-test-mcp-client a npm
set -e

echo "üöÄ Iniciant proc√©s de publicaci√≥..."

# Verificar que estem al directori arrel del projecte
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: No es troba package.json. Executa aquest script des del directori arrel del projecte."
    exit 1
fi

# Verificar que npm est√† instal¬∑lat
if ! command -v npm &> /dev/null; then
    echo "‚ùå Error: npm no est√† instal¬∑lat o no est√† al PATH."
    exit 1
fi

# Verificar que estem autenticats a npm
if ! npm whoami &> /dev/null; then
    echo "‚ùå Error: No est√†s autenticat a npm. Executa 'npm login' primer."
    exit 1
fi

# Netejar el directori build
echo "üßπ Netejant directori build..."
rm -rf build/

# Fer build del projecte
echo "üî® Compilant TypeScript..."
npm run build

# Verificar que el fitxer build/index.js existeix
if [ ! -f "build/index.js" ]; then
    echo "‚ùå Error: El fitxer build/index.js no s'ha generat correctament."
    exit 1
fi

# Assegurar permisos d'execuci√≥
echo "üîê Configurant permisos d'execuci√≥..."
chmod +x build/index.js

# Verificar que el fitxer √©s executable
if [ ! -x "build/index.js" ]; then
    echo "‚ùå Error: El fitxer build/index.js no t√© permisos d'execuci√≥."
    exit 1
fi

# Verificar que el shebang est√† present
if ! head -n1 "build/index.js" | grep -q "#!/usr/bin/env node"; then
    echo "‚ùå Error: El shebang no est√† present al fitxer build/index.js."
    exit 1
fi

# Verificar l'estat del git (opcional)
if [ -d ".git" ]; then
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ö†Ô∏è  Advert√®ncia: Hi ha canvis no commitats al repositori."
        echo "   Considera fer commit dels canvis abans de publicar."
        read -p "Vols continuar de totes maneres? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo "‚ùå Publicaci√≥ cancel¬∑lada."
            exit 1
        fi
    fi
fi

# Mostrar informaci√≥ del paquet
echo "üì¶ Informaci√≥ del paquet:"
echo "   Nom: $(node -p "require('./package.json').name")"
echo "   Versi√≥: $(node -p "require('./package.json').version")"
echo "   Descripci√≥: $(node -p "require('./package.json').description")"

# Confirmar publicaci√≥
read -p "Vols publicar aquest paquet a npm? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Publicaci√≥ cancel¬∑lada."
    exit 1
fi

# Publicar a npm
echo "üì§ Publicant a npm..."
npm publish

echo "‚úÖ Paquet publicat amb √®xit!"
echo "üîó El paquet est√† disponible a: https://www.npmjs.com/package/$(node -p "require('./package.json').name")"
echo "üí° Per instal¬∑lar-lo globalment: npm install -g $(node -p "require('./package.json').name")"

# Preguntar si vol actualitzar el servidor
echo ""
read -p "Vols actualitzar autom√†ticament el servidor? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîÑ Actualitzant el servidor..."

    # Configuraci√≥ del servidor
    SERVER_DIR="/Users/marcpla/Documents/Feina/Projectes/mcp/mcp_salesforce"
    CLIENT_PACKAGE_NAME="ibm-test-mcp-client"

    # Verificar que el directori del servidor existeix
    if [ ! -d "$SERVER_DIR" ]; then
        echo "‚ùå Error: No es troba el directori del servidor: $SERVER_DIR"
        echo "   Actualitza manualment la depend√®ncia al servidor."
        exit 1
    fi

    if [ ! -f "$SERVER_DIR/package.json" ]; then
        echo "‚ùå Error: No es troba package.json al directori del servidor."
        echo "   Actualitza manualment la depend√®ncia al servidor."
        exit 1
    fi

    # Obtenir la nova versi√≥ del client
    NEW_VERSION=$(node -p "require('./package.json').version")
    echo "üì¶ Nova versi√≥ del client: $NEW_VERSION"

    # Anar al directori del servidor
    cd "$SERVER_DIR"

    # Obtenir la versi√≥ actual del servidor
    SERVER_CURRENT_VERSION=$(node -p "require('./package.json').version")
    echo "üì¶ Versi√≥ actual del servidor: $SERVER_CURRENT_VERSION"

    # Incrementar versi√≥ del servidor (patch)
    echo "üî¢ Incrementant versi√≥ del servidor..."
    npm version patch --no-git-tag-version
    SERVER_NEW_VERSION=$(node -p "require('./package.json').version")
    echo "üì¶ Nova versi√≥ del servidor: $SERVER_NEW_VERSION"

    # Actualitzar la depend√®ncia del client
    echo "üì¶ Actualitzant depend√®ncia del client al servidor..."
    npm install "$CLIENT_PACKAGE_NAME@$NEW_VERSION"

    echo "‚úÖ Servidor actualitzat amb √®xit!"
    echo ""
    echo "üìã Resum de canvis:"
    echo "   Client: $NEW_VERSION"
    echo "   Servidor: $SERVER_CURRENT_VERSION ‚Üí $SERVER_NEW_VERSION"
    echo "   Depend√®ncia actualitzada a: $CLIENT_PACKAGE_NAME@$NEW_VERSION"
    echo ""
    echo "üí° Recorda reiniciar el servidor MCP per aplicar els canvis!"

    # Tornar al directori del client
    cd "$(dirname "${BASH_SOURCE[0]}")/.."
else
    echo "‚ÑπÔ∏è  Servidor no actualitzat. Actualitza manualment la depend√®ncia quan vulguis."
fi
